/*
 * Cocktail API
 *
 * API to manage cocktail info.
 *
 * The version of the OpenAPI document: 0.1.2
 * Contact: okarians.302.dev@gmail.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using mycocktails.api.cocktailApi.Attributes;
using mycocktails.library.cocktailApi.Controllers;
using mycocktails.library.cocktailApi.Models;
using mycocktails.api.cocktailApi.Logics.intarfaces;
using Microsoft.Extensions.Logging;
using mycocktails.library.common.Models;
using System.Net;
using CommonMessageModel = mycocktails.library.common.Models.CommonMessageModel;

namespace mycocktails.api.cocktailApi.Controllers
{
    /// <summary>
    /// Cocktail api controller.
    /// </summary>
    [ApiController]
    public class CocktailController : CocktailApiController
    {
        private readonly ICocktailLogic logic;
        private readonly ILogger<CocktailController> logger;

        /// <summary>
        /// Constructor
        /// </summary>
        /// <param name="logic"></param>
        /// <param name="logger"></param>
        public CocktailController(
            ICocktailLogic logic,
            ILogger<CocktailController> logger)
        {
            this.logic = logic;
            this.logger = logger;
        }

        #region Get cocktails.

        /// <summary>
        /// Get cocktail info by id.
        /// </summary>
        /// <param name="id">Cocktail id.</param>
        /// <response code="200">Get cocktail info response.</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpGet]
        [Route("/api/v1/cocktail/cocktail/{id}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(CocktailModel))]
        [ProducesResponseType(statusCode: 400, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 401, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 409, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 500, type: typeof(CommonMessageModel))]
        public override IActionResult CocktailIdGet([FromRoute][Required] int id)
        {
            ApiResponse result;

            try
            {
                result = logic.GetCocktail(id);
            }

            //
            catch (Exception ex)
            {
                CommonMessageModel error = new CommonMessageModel
                {
                    Msg = "An unknown error has occurred."
                };
                this.logger.LogError($"{error.Msg}");
                result = new ErrorResponse<CommonMessageModel>(HttpStatusCode.InternalServerError, error, ex.InnerException?.Message ?? ex.Message);
            }

            this.logger.LogInformation($"StatusCode: {result.StatusCode}");
            if (result.Success)
            {
                ApiResponse<CocktailModel> successResponse = (ApiResponse<CocktailModel>)result;
                return StatusCode((int)successResponse.StatusCode, successResponse.ResponseModel);
            }
            else
            {
                ApiResponse<CommonMessageModel> failureResponse = (ApiResponse<CommonMessageModel>)result;
                return StatusCode((int)failureResponse.StatusCode, failureResponse.ResponseModel);
            }
        }

        /// <summary>
        /// Get cocktail info list.
        /// </summary>
        /// <response code="200">Get cocktail info list response.</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpGet]
        [Route("/api/v1/cocktail/cocktail")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<CocktailModel>))]
        [ProducesResponseType(statusCode: 400, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 401, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 409, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 500, type: typeof(CommonMessageModel))]
        public override IActionResult CocktailGet()
        {
            ApiResponse result;

            try
            {
                result = logic.GetCocktailList();
            }

            //
            catch (Exception ex)
            {
                CommonMessageModel error = new CommonMessageModel
                {
                    Msg = "An unknown error has occurred.",
                };
                this.logger.LogError($"{error.Msg}");
                result = new ErrorResponse<CommonMessageModel>(HttpStatusCode.InternalServerError, error, ex.InnerException?.Message ?? ex.Message);
            }

            this.logger.LogInformation($"StatusCode: {result.StatusCode}");
            if (result.Success)
            {
                ApiResponse<List<CocktailModel>> successResponse = (ApiResponse<List<CocktailModel>>)result;
                return StatusCode((int)successResponse.StatusCode, successResponse.ResponseModel);
            }
            else
            {
                ApiResponse<CommonMessageModel> failureResponse = (ApiResponse<CommonMessageModel>)result;
                return StatusCode((int)failureResponse.StatusCode, failureResponse.ResponseModel);
            }
        }

        #endregion

        #region Create cocktails.

        /// <summary>
        /// Create cocktail info.
        /// </summary>
        /// <param name="cocktailDetailModel">Create cocktail info request body.</param>
        /// <response code="201">Create cocktail info response.</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPost]
        [Route("/api/v1/cocktail/cocktail")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 201, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 400, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 401, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 409, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 500, type: typeof(CommonMessageModel))]
        public override IActionResult CocktailPost([FromBody] CocktailDetailModel cocktailDetailModel)
        {
            return null;
        }

        /// <summary>
        /// Create maltiple cocktail info.
        /// </summary>
        /// <param name="cocktailModel">Delete cocktail info request body.</param>
        /// <response code="201">Create cocktail info response.</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPost]
        [Route("/api/v1/cocktail/cocktail/bulk_create")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 201, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 400, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 401, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 409, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 500, type: typeof(CommonMessageModel))]
        public override IActionResult CocktailBulkCreatePost([FromBody] List<CocktailModel> cocktailModel)
        {
            return null;
        }

        #endregion

        #region Update cocktails.

        /// <summary>
        /// Update cocktail info by id.
        /// </summary>
        /// <param name="id">Cocktail id.</param>
        /// <param name="cocktailDetailModel">Update cocktail info request body.</param>
        /// <response code="201">Update cocktail info response.</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPut]
        [Route("/api/v1/cocktail/cocktail/{id}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 201, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 400, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 401, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 409, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 500, type: typeof(CommonMessageModel))]
        public override IActionResult CocktailIdPut([FromRoute][Required] int id, [FromBody] CocktailDetailModel cocktailDetailModel)
        {
            return null;
        }

        /// <summary>
        /// Update maltiple cocktail info.
        /// </summary>
        /// <param name="cocktailModel">Delete cocktail info request body.</param>
        /// <response code="201">Create cocktail info response.</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPost]
        [Route("/api/v1/cocktail/cocktail/bulk_update")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 201, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 400, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 401, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 409, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 500, type: typeof(CommonMessageModel))]
        public override IActionResult CocktailBulkUpdatePost([FromBody] List<CocktailModel> cocktailModel)
        {
            return null;
        }

        #endregion

        #region Delete cocktails.

        /// <summary>
        /// Delete cocktail info by id.
        /// </summary>
        /// <param name="id">Cocktail id.</param>
        /// <response code="204">Delete cocktail info response.</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpDelete]
        [Route("/api/v1/cocktail/cocktail/{id}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 204, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 400, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 401, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 409, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 500, type: typeof(CommonMessageModel))]
        public override IActionResult CocktailIdDelete([FromRoute][Required] int id)
        {
            return null;
        }

        /// <summary>
        /// Delete maltiple cocktail info.
        /// </summary>
        /// <param name="requestBody">Delete cocktail info request body.</param>
        /// <response code="204">Delete cocktail info response.</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPost]
        [Route("/api/v1/cocktail/cocktail/bulk_delete")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 204, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 400, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 401, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 409, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 500, type: typeof(CommonMessageModel))]
        public override IActionResult CocktailBulkDeletePost([FromBody] List<int> requestBody)
        {
            return null;
        }

        #endregion
    }
}
