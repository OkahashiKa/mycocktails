/*
 * Cocktails API
 *
 * API to manage cocktail info.
 *
 * The version of the OpenAPI document: 0.1.4
 * Contact: okarians.302.dev@gmail.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using mycocktails.api.cocktailApi.Attributes;
using mycocktails.library.cocktailApi.Controllers;
using mycocktails.api.cocktailApi.Models;
using mycocktails.library.cocktailApi.Models;

namespace mycocktails.api.cocktailApi.Controllers
{ 
    /// <summary>
    /// Get cocktail api controller.
    /// </summary>
    [ApiController]
    public class CreateCocktailController : CreateCocktailsApiController
    { 

        /// <summary>
        /// Create maltiple cocktail info.
        /// </summary>
        /// <param name="cocktailModel">Delete cocktail info request body.</param>
        /// <response code="201">Create cocktail info response.</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPost]
        [Route("/api/v1/cocktails/bulk_create")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 201, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 400, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 401, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 409, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 500, type: typeof(CommonMessageModel))]
        public override IActionResult BulkCreatePost([FromBody]List<CocktailModel> cocktailModel)
        { 

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(CommonMessageModel));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(CommonMessageModel));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(CommonMessageModel));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(CommonMessageModel));
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(CommonMessageModel));
            string exampleJson = null;
            exampleJson = "{\n  \"msg\" : \"msg\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CommonMessageModel>(exampleJson)
            : default(CommonMessageModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create cocktail info.
        /// </summary>
        /// <param name="cocktailDetailModel">Create cocktail info request body.</param>
        /// <response code="201">Create cocktail info response.</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="409">Conflict</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPost]
        [Route("/api/v1/cocktails")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 201, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 400, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 401, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 409, type: typeof(CommonMessageModel))]
        [ProducesResponseType(statusCode: 500, type: typeof(CommonMessageModel))]
        public override IActionResult RootPost([FromBody]CocktailDetailModel cocktailDetailModel)
        { 

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(CommonMessageModel));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(CommonMessageModel));
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401, default(CommonMessageModel));
            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409, default(CommonMessageModel));
            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(CommonMessageModel));
            string exampleJson = null;
            exampleJson = "{\n  \"msg\" : \"msg\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CommonMessageModel>(exampleJson)
            : default(CommonMessageModel);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
