openapi: 3.0.1
info:
  title: Cocktails API
  description: API to manage cocktail info.
  contact:
    email: okarians.302.dev@gmail.com
  version: 0.2.8
servers:
  - url: 'https://release.com/api/v1/cocktails'
    description: Release server
  - url: 'http://localhost/api/v1/cocktails'
    description: Local server
tags:
  - name: CreateCocktails
    description: Create API for cocktail info.
  - name: GetCocktails
    description: Get API for cocktail info.
  - name: UpdateCocktails
    description: Update API for cocktail info.
  - name: DeleteCocktails
    description: Delete API for cocktail info.
  - name: SearchCocktails
    description: Search API for cocktail info.

paths:
  /{id}:
    get:
      tags:
        - GetCocktails
      summary: Get cocktail info by id.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: Cocktail id.
          required: true
          schema:
            $ref: '#/components/schemas/CocktailId'
      responses:
        '200':
          $ref: '#/components/responses/CocktailGetResponse'
        '400':
          $ref: '#/components/responses/400Model'
        '401':
          $ref: '#/components/responses/401Model'
        '409':
          $ref: '#/components/responses/409Model'
        '500':
          $ref: '#/components/responses/500Model'
    put:
      tags:
        - UpdateCocktails
      summary: Update cocktail info by id.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: Cocktail id.
          required: true
          schema:
            $ref: '#/components/schemas/CocktailId'
      requestBody:
        description: Update cocktail info request body.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CocktailDetailModel'
      responses:
        '201':
          $ref: '#/components/responses/CocktailPutResponse'
        '400':
          $ref: '#/components/responses/400Model'
        '401':
          $ref: '#/components/responses/401Model'
        '409':
          $ref: '#/components/responses/409Model'
        '500':
          $ref: '#/components/responses/500Model'
    delete:
      tags:
        - DeleteCocktails
      summary: Delete cocktail info by id.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: Cocktail id.
          required: true
          schema:
            $ref: '#/components/schemas/CocktailId'
      responses:
        '204':
          $ref: '#/components/responses/CocktailDeleteResponse'
        '400':
          $ref: '#/components/responses/400Model'
        '401':
          $ref: '#/components/responses/401Model'
        '409':
          $ref: '#/components/responses/409Model'
        '500':
          $ref: '#/components/responses/500Model'
  /:
    get:
      tags:
        - GetCocktails
      summary: Get cocktail info list.
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/CocktailListGetResponse'
        '400':
          $ref: '#/components/responses/400Model'
        '401':
          $ref: '#/components/responses/401Model'
        '409':
          $ref: '#/components/responses/409Model'
        '500':
          $ref: '#/components/responses/500Model'
    post:
      tags:
        - CreateCocktails
      summary: Create cocktail info.
      security:
        - bearerAuth: []
      requestBody:
        description: Create cocktail info request body.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CocktailDetailModel'
      responses:
        '201':
          $ref: '#/components/responses/CocktailPostResponse'
        '400':
          $ref: '#/components/responses/400Model'
        '401':
          $ref: '#/components/responses/401Model'
        '409':
          $ref: '#/components/responses/409Model'
        '500':
          $ref: '#/components/responses/500Model'
  /bulk_create:
    post:
      tags:
        - CreateCocktails
      summary: Create maltiple cocktail info.
      security:
        - bearerAuth: []
      requestBody:
        description: Delete cocktail info request body.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CocktailList'
      responses:
        '201':
          $ref: '#/components/responses/CocktailPostResponse'
        '400':
          $ref: '#/components/responses/400Model'
        '401':
          $ref: '#/components/responses/401Model'
        '409':
          $ref: '#/components/responses/409Model'
        '500':
          $ref: '#/components/responses/500Model'
  /bulk_update:
    post:
      tags:
        - UpdateCocktails
      summary: Update maltiple cocktail info.
      security:
        - bearerAuth: []
      requestBody:
        description: Delete cocktail info request body.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CocktailList'
      responses:
        '201':
          $ref: '#/components/responses/CocktailPostResponse'
        '400':
          $ref: '#/components/responses/400Model'
        '401':
          $ref: '#/components/responses/401Model'
        '409':
          $ref: '#/components/responses/409Model'
        '500':
          $ref: '#/components/responses/500Model'
  /bulk_delete:
    post:
      tags:
        - DeleteCocktails
      summary: Delete maltiple cocktail info.
      security:
        - bearerAuth: []
      requestBody:
        description: Delete cocktail info request body.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CocktailIdList'
      responses:
        '204':
          $ref: '#/components/responses/CocktailDeleteResponse'
        '400':
          $ref: '#/components/responses/400Model'
        '401':
          $ref: '#/components/responses/401Model'
        '409':
          $ref: '#/components/responses/409Model'
        '500':
          $ref: '#/components/responses/500Model'
  /search:
    post:
      tags:
        - SearchCocktails
      summary: Search cocktail info.
      security:
        - bearerAuth: []
      requestBody:
        description: Search cocktail info request body.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCocktailConditionModel'
      responses:
        '200':
          $ref: '#/components/responses/SerachCocktailResponse'
        '400':
          $ref: '#/components/responses/400Model'
        '401':
          $ref: '#/components/responses/401Model'
        '409':
          $ref: '#/components/responses/409Model'
        '500':
          $ref: '#/components/responses/500Model'

components:
  responses:
    CocktailGetResponse:
      description: Get cocktail info response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CocktailDetailModel'
    CocktailPostResponse:
      description: Create cocktail info response.
      content:
        application/json:
          schema:
            $ref: '../components/CommonMessageModel.yaml'
    CocktailPutResponse:
      description: Update cocktail info response.
      content:
        application/json:
          schema:
            $ref: '../components/CommonMessageModel.yaml'
    CocktailDeleteResponse:
      description: Delete cocktail info response.
      content:
        application/json:
          schema:
            $ref: '../components/CommonMessageModel.yaml'
    CocktailListGetResponse:
      description: Get cocktail info list response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CocktailList'
    SerachCocktailResponse:
      description: Search cocktail info response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CocktailList'
    400Model:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '../components/CommonMessageModel.yaml'
          example:
            reason: Validation_Error
            msg: リクエストの形式が不正です
    401Model:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '../components/CommonMessageModel.yaml'
          example:
            reason: Authentication_ERROR
            msg: 認証に失敗しました 
    409Model:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '../components/CommonMessageModel.yaml'
          example:
            reason: DATA_INCONSITENCY
            msg: データ不整合のため、突合情報検索に失敗しました
    500Model:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '../components/CommonMessageModel.yaml'
          example:
            reason: SERVER_ERROR
            msg: サーバーエラー
  schemas:
    CocktailModel:
      description: Cocktail info model.
      type: object
      properties:
        cocktailId:
          $ref: '#/components/schemas/CocktailId'
        cocktailName:
          $ref: '#/components/schemas/CocktailName'
    CocktailList:
      description: Cocktail info list.
      type: array
      items:
        $ref: '#/components/schemas/CocktailModel'
    CocktailDetailModel:
      description: Cocktail info detail model.
      type: object
      properties:
        cocktailId:
          $ref: '#/components/schemas/CocktailId'
        cocktailName:
          $ref: '#/components/schemas/CocktailName'
        materialIdList:
          $ref: '#/components/schemas/MaterialIdList'
    SearchCocktailConditionModel:
      description: Search cocktail info condition model.
      type: object
      properties:
        searchString:
          type: string
          format: string
          example: "ジントニック"
        materialIdList:
          $ref: '#/components/schemas/MaterialIdList'
        materialSearchType:
          description: cocktail search type. (AND, OR)
          type: string
          format: string
          example: "AND"

    CocktailIdList:
      description: Cocktail id list.
      type: array
      items:
        $ref: '#/components/schemas/CocktailId'
    MaterialIdList:
      description: Material id list.
      type: array
      items:
        $ref: '#/components/schemas/MaterialId'

    # 以下、複数モデルで使用する共通部品
    CocktailId:
      description: Cocktail id
      type: integer
      format: integer
      example: 1
    CocktailName:
      description: cocktail name.
      type: string
      format: string
      example: ジントニック
    MaterialId:
      description: Cocktail id
      type: integer
      format: integer
      example: 1